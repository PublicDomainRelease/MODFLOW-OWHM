
Fortran programs rely on the operating system's Stack space for 
local variables, OpenMP threads, and Recursive routines for speed.
This space is only for those aforementioned cases and NOT for the majority of
the global variables which comprise MODFLOW-OWHM's variables (eg DELR, BOTM, HNEW).

A problem with this is for larger problems a condition known as a 
Stack Overflow or Segmentation Fault can occur. 
(ie A local variable creation exceeds the stack size.) 

The default level is set by the operating system, but Intel Visual Fortran 
for Windows does allow setting its value.

For Windows systems the default stack size is 1MB for all programs (if you compile). 

The provided executables in this release has the Windows stack size
adjusted to 10MB, which should meet the needs of most modeling situations 
(too large of a stack defeats the purpose of having one).

##################################################################################
LINUX USERS
##################################################################################
Please note that linux systems do not include a stack limit within an executables. 
Instead this is managed by the console (command prompt) that the program is run in.
Its value varies from distribution to distribution, but usually is around 8KB.

If you receive a stack overflow or segmentation fault, you might have a program that
is bigger than the default stack size.

Most distributions support the command ulimit, which allows adjusting the stack size
To find the current stack size in KB run the command: 
ulimit -s

If you have stack overflows or segmentation errors you can increase the stack size to
the full size of RAM of the computer by running the following command when a 
new console is run/opened (or a line before calling OWHM on a shell script)

ulimit -s unlimited

To follow suit with the windows release you can use the following command to 
adjust the stack limit to 10MB.

ulimit -s 10240
